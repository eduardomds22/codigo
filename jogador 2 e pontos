case 72: /// CIMA
    if (jogador.x > 0) {
        if (m[jogador.x - 1][jogador.y] != 1 && m[jogador.x - 1][jogador.y] != 2 && m[jogador.x - 1][jogador.y] != 9 && !posicaoOcupadaPelaBomba(jogador.x - 1, jogador.y, m)) {
            jogador.x--;
            pontos.Movimento++;
        } else if (m[jogador.x - 1][jogador.y] == 10) {
            Upgrades.PassarBlocosQuebraveis = true;
        } else if (m[jogador.x - 1][jogador.y] == 11) {
            Upgrades.AumentoBomba = true;
        } else if (m[jogador.x - 1][jogador.y] == 12) {
            Upgrades.MaisBomba = true;
        } else if (m[jogador.x - 1][jogador.y] == 13) {
            Upgrades.SobreviverBomba = true;
        } else if (m[jogador.x - 1][jogador.y] == 14) {
            Upgrades.DestruicaoMaisBlocos = true;
        }

        if (Upgrades.PassarBlocosQuebraveis && m[jogador.x - 1][jogador.y] != 1) {
            jogador.x--;
            pontos.Movimento++;
        }
    }
    break;

case 80: /// BAIXO
    if (jogador.x < 19) { // Considerando que o índice máximo é 19 para uma matriz 20xN
        if (m[jogador.x + 1][jogador.y] != 1 && m[jogador.x + 1][jogador.y] != 2 && m[jogador.x + 1][jogador.y] != 9 && !posicaoOcupadaPelaBomba(jogador.x + 1, jogador.y, m)) {
            jogador.x++;
            pontos.Movimento++;
        } else if (m[jogador.x + 1][jogador.y] == 10) {
            Upgrades.PassarBlocosQuebraveis = true;
        } else if (m[jogador.x + 1][jogador.y] == 11) {
            Upgrades.AumentoBomba = true;
        } else if (m[jogador.x + 1][jogador.y] == 12) {
            Upgrades.MaisBomba = true;
        } else if (m[jogador.x + 1][jogador.y] == 13) {
            Upgrades.SobreviverBomba = true;
        } else if (m[jogador.x + 1][jogador.y] == 14) {
            Upgrades.DestruicaoMaisBlocos = true;
        }

        if (Upgrades.PassarBlocosQuebraveis && m[jogador.x + 1][jogador.y] != 1) {
            jogador.x++;
            pontos.Movimento++;
        }
    }
    break;

case 75: /// ESQUERDA
    if (jogador.y > 0) {
        if (m[jogador.x][jogador.y - 1] != 1 && m[jogador.x][jogador.y - 1] != 2 && m[jogador.x][jogador.y - 1] != 9 && !posicaoOcupadaPelaBomba(jogador.x, jogador.y - 1, m)) {
            jogador.y--;
            pontos.Movimento++;
        } else if (m[jogador.x][jogador.y - 1] == 10) {
            Upgrades.PassarBlocosQuebraveis = true;
        } else if (m[jogador.x][jogador.y - 1] == 11) {
            Upgrades.AumentoBomba = true;
        } else if (m[jogador.x][jogador.y - 1] == 12) {
            Upgrades.MaisBomba = true;
        } else if (m[jogador.x][jogador.y - 1] == 13) {
            Upgrades.SobreviverBomba = true;
        } else if (m[jogador.x][jogador.y - 1] == 14) {
            Upgrades.DestruicaoMaisBlocos = true;
        }

        if (Upgrades.PassarBlocosQuebraveis && m[jogador.x][jogador.y - 1] != 1) {
            jogador.y--;
            pontos.Movimento++;
        }
    }
    break;

case 77: /// DIREITA
    if (jogador.y < 38) { // Considerando que o índice máximo é 38 para uma matriz Nx40
        if (m[jogador.x][jogador.y + 1] != 1 && m[jogador.x][jogador.y + 1] != 2 && m[jogador.x][jogador.y + 1] != 9 && !posicaoOcupadaPelaBomba(jogador.x, jogador.y + 1, m)) {
            jogador.y++;
            pontos.Movimento++;
        } else if (m[jogador.x][jogador.y + 1] == 10) {
            Upgrades.PassarBlocosQuebraveis = true;
        } else if (m[jogador.x][jogador.y + 1] == 11) {
            Upgrades.AumentoBomba = true;
        } else if (m[jogador.x][jogador.y + 1] == 12) {
            Upgrades.MaisBomba = true;
        } else if (m[jogador.x][jogador.y + 1] == 13) {
            Upgrades.SobreviverBomba = true;
        } else if (m[jogador.x][jogador.y + 1] == 14) {
            Upgrades.DestruicaoMaisBlocos = true;
        }

        if (Upgrades.PassarBlocosQuebraveis && m[jogador.x][jogador.y + 1] != 1) {
            jogador.y++;
            pontos.Movimento++;
        }
    }
    break;
